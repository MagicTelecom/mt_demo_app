<?php 
/*
 * MagicTelecomAPILib
 *
 * This file was automatically generated by APIMATIC BETA v2.0 on 01/14/2016
 */

namespace MagicTelecomAPILib\Models;

use JsonSerializable;

class CallerLocation implements JsonSerializable {
    /**
     * Location Name
     * @param string $name public property
     */
    protected $name;

    /**
     * Address
     * @param string $address public property
     */
    protected $address;

    /**
     * City
     * @param string $city public property
     */
    protected $city;

    /**
     * Region
     * @param string $region public property
     */
    protected $region;

    /**
     * Postal Code
     * @param int $postalCode public property
     */
    protected $postalCode;

    /**
     * Unit Type
     * @param string $unitType public property
     */
    protected $unitType;

    /**
     * Unit Number
     * @param int $unitNumber public property
     */
    protected $unitNumber;

    /**
     * Country Name
     * @param string $country public property
     */
    protected $country;

    /**
     * Constructor to set initial or default values of member properties
	 * @param   string            $name          Initialization value for the property $this->name       
	 * @param   string            $address       Initialization value for the property $this->address    
	 * @param   string            $city          Initialization value for the property $this->city       
	 * @param   string            $region        Initialization value for the property $this->region     
	 * @param   int               $postalCode    Initialization value for the property $this->postalCode 
	 * @param   string            $unitType      Initialization value for the property $this->unitType   
	 * @param   int               $unitNumber    Initialization value for the property $this->unitNumber 
	 * @param   string            $country       Initialization value for the property $this->country    
     */
    public function __construct()
    {
        if(8 == func_num_args())
        {
            $this->name        = func_get_arg(0);
            $this->address     = func_get_arg(1);
            $this->city        = func_get_arg(2);
            $this->region      = func_get_arg(3);
            $this->postalCode  = func_get_arg(4);
            $this->unitType    = func_get_arg(5);
            $this->unitNumber  = func_get_arg(6);
            $this->country     = func_get_arg(7);
        }
    }

    /**
     * Return a property of the response if it exists.
     * Possibilities include: code, raw_body, headers, body (if the response is json-decodable)
     * @return mixed
     */
    public function __get($property)
    {
        if (property_exists($this, $property)) {
            //UTF-8 is recommended for correct JSON serialization
            $value = $this->$property;
            if (is_string($value) && mb_detect_encoding($value, "UTF-8", TRUE) != "UTF-8") {
                return utf8_encode($value);
            }
            else {
                return $value;
            }
        }
    }
    
    /**
     * Set the properties of this object
     * @param string $property the property name
     * @param mixed $value the property value
     */
    public function __set($property, $value)
    {
        if (property_exists($this, $property)) {
            //UTF-8 is recommended for correct JSON serialization
            if (is_string($value) && mb_detect_encoding($value, "UTF-8", TRUE) != "UTF-8") {
                $this->$property = utf8_encode($value);
            }
            else {
                $this->$property = $value;
            }
        }

        return $this;
    }

    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['name']        = $this->name;
        $json['address']     = $this->address;
        $json['city']        = $this->city;
        $json['region']      = $this->region;
        $json['postal_code'] = $this->postalCode;
        $json['unit_type']   = $this->unitType;
        $json['unit_number'] = $this->unitNumber;
        $json['country']     = $this->country;
        return $json;
    }
}